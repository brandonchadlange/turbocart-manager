generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Student {
  id        String   @id @default(cuid())
  sessionId String
  firstName String
  lastName  String
  grade     String
  Basket    Basket[]
  Session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Student_sessionId_fkey")
}

model Order {
  id                String       @id @default(cuid())
  createdAt         DateTime
  merchantId        String
  paymentId         String
  quantity          Int          @default(0)
  totalInCents      Int          @default(0)
  students          Int          @default(0)
  customerEmail     String       @default("")
  customerFirstName String       @default("")
  customerLastName  String       @default("")
  completeBatches   Int          @default(0)
  totalBatches      Int          @default(0)
  serviceFeeInCents Int          @default(0)
  isComplete        Boolean      @default(false)
  notes             String?
  Merchant          Merchant     @relation(fields: [merchantId], references: [id])
  OrderBatch        OrderBatch[]
  OrderItem         OrderItem[]

  @@index([merchantId], map: "Order_merchantId_fkey")
}

model OrderItem {
  id                  String     @id @default(cuid())
  orderId             String
  productId           String
  quantity            Int
  pricePerItemInCents Int
  orderBatchId        String
  packed              Boolean    @default(false)
  variantId           String
  OrderBatch          OrderBatch @relation(fields: [orderBatchId], references: [id])
  order               Order      @relation(fields: [orderId], references: [id])

  @@index([orderId], map: "OrderItem_orderId_fkey")
  @@index([orderBatchId], map: "OrderItem_orderBatchId_fkey")
}

model Basket {
  id        String  @id
  sessionId String
  productId String
  studentId String
  menuId    String
  dateId    String
  quantity  Int
  variantId String
  Session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  Student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Basket_sessionId_fkey")
  @@index([studentId], map: "Basket_studentId_fkey")
}

model Session {
  id                String    @id
  merchantId        String
  createdAt         DateTime
  customerEmail     String    @default("")
  customerFirstName String    @default("")
  customerLastName  String    @default("")
  rememberDetails   Boolean   @default(false)
  Basket            Basket[]
  Student           Student[]
}

model Merchant {
  id            String          @id
  name          String
  clerkId       String          @default("")
  strategy      String          @default("")
  Category      Category[]
  File          File[]
  Filter        Filter[]
  Listing       Listing[]
  Menu          Menu[]
  Order         Order[]
  Page          Page[]
  PaymentMethod PaymentMethod[]
  Template      Template[]
}

model OrderBatch {
  id               String      @id
  orderId          String
  dateId           String
  menuId           String
  studentFirstName String
  studentLastName  String
  studentGrade     String
  fulfilled        Boolean     @default(false)
  Order            Order       @relation(fields: [orderId], references: [id])
  OrderItem        OrderItem[]

  @@index([orderId], map: "OrderBatch_orderId_fkey")
}

model PaymentMethod {
  id            String   @id @default(cuid())
  merchantId    String
  name          String
  description   String
  provider      String
  enabled       Boolean
  configuration String
  Merchant      Merchant @relation(fields: [merchantId], references: [id])

  @@index([merchantId], map: "PaymentMethod_merchantId_fkey")
}

model Menu {
  id             String         @id @default(cuid())
  merchantId     String
  name           String
  merchant       Merchant       @relation(fields: [merchantId], references: [id])
  menuCategories MenuCategory[]

  @@index([merchantId], map: "Menu_merchantId_fkey")
}

model Category {
  id                String            @id @default(cuid())
  merchantId        String
  name              String
  rank              Int               @default(0)
  bannerImageUrl    String            @default("")
  merchant          Merchant          @relation(fields: [merchantId], references: [id])
  listingCategories ListingCategory[]
  menuCategories    MenuCategory[]

  @@index([merchantId], map: "Category_merchantId_fkey")
}

model MenuCategory {
  menuId     String
  categoryId String
  rank       Int      @default(0)
  category   Category @relation(fields: [categoryId], references: [id])
  menu       Menu     @relation(fields: [menuId], references: [id])

  @@id([menuId, categoryId])
  @@index([categoryId], map: "MenuCategory_categoryId_fkey")
}

model Listing {
  id                     String               @id @default(cuid())
  merchantId             String
  name                   String
  description            String
  priceInCents           Int
  published              Boolean              @default(false)
  isStockTrackingEnabled Boolean              @default(false)
  slug                   String               @default("")
  defaultImageUrl        String               @default("")
  merchant               Merchant             @relation(fields: [merchantId], references: [id])
  categories             ListingCategory[]
  ListingFilterValue     ListingFilterValue[]
  variants               ListingVariant[]

  @@index([merchantId], map: "Listing_merchantId_fkey")
}

model ListingVariant {
  id                   String  @id @default(cuid())
  listingId            String
  name                 String
  isDefault            Boolean
  additionalFeeInCents Int     @default(0)
  position             Int     @default(-1)
  amountInStock        Int     @default(0)
  isOutOfStock         Boolean @default(false)
  listing              Listing @relation(fields: [listingId], references: [id])
  deleted              Boolean @default(false)

  @@index([listingId], map: "ListingVariant_listingId_fkey")
}

model ListingCategory {
  listingId  String
  categoryId String
  rank       Int      @default(0)
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  listing    Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@id([listingId, categoryId])
  @@index([categoryId], map: "ListingCategory_categoryId_fkey")
}

model Filter {
  id         String        @id @default(cuid())
  filterId   String
  merchantId String
  name       String
  merchant   Merchant      @relation(fields: [merchantId], references: [id])
  values     FilterValue[]

  @@index([merchantId], map: "Filter_merchantId_fkey")
}

model FilterValue {
  id                 String               @id @default(cuid())
  filterId           String
  value              String
  filter             Filter               @relation(fields: [filterId], references: [id])
  ListingFilterValue ListingFilterValue[]

  @@index([filterId], map: "FilterValue_filterId_fkey")
}

model ListingFilterValue {
  listingId     String
  filterValueId String
  FilterValue   FilterValue @relation(fields: [filterValueId], references: [id])
  Listing       Listing     @relation(fields: [listingId], references: [id])

  @@id([listingId, filterValueId])
  @@index([filterValueId], map: "ListingFilterValue_filterValueId_fkey")
}

model File {
  id             String   @id
  merchantId     String
  componentId    String
  type           String
  name           String
  htmlString     String   @db.LongText
  cssString      String   @db.LongText
  htmlJsonString String   @db.LongText
  Merchant       Merchant @relation(fields: [merchantId], references: [id])

  @@index([merchantId], map: "File_merchantId_fkey")
}

model Page {
  id            String          @id
  merchantId    String
  name          String
  path          String
  layoutId      String
  Template      Template        @relation(fields: [layoutId], references: [id])
  Merchant      Merchant        @relation(fields: [merchantId], references: [id])
  PageComponent PageComponent[]

  @@index([layoutId], map: "Page_layoutId_fkey")
  @@index([merchantId], map: "Page_merchantId_fkey")
}

model PageComponent {
  id                      String @id
  pageId                  String
  rank                    Int
  componentKey            String
  configurationJsonString String
  Page                    Page   @relation(fields: [pageId], references: [id])

  @@index([pageId], map: "PageComponent_pageId_fkey")
}

model Template {
  id             String   @id
  merchantId     String
  componentId    String
  type           String
  name           String
  htmlString     String   @db.LongText
  cssString      String   @db.LongText
  htmlJsonString String   @db.LongText
  Page           Page[]
  Merchant       Merchant @relation(fields: [merchantId], references: [id])

  @@index([merchantId], map: "Template_merchantId_fkey")
}
